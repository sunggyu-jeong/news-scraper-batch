name: Railway Service Schedule
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'   # KST 09:00
    - cron: '0 2 * * *'  # KST 11:00

jobs:
  control:
    runs-on: ubuntu-latest
    container: ghcr.io/railwayapp/cli:latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_PROJECT_TOKEN }}
      PROJECT_ID:    ${{ secrets.RAILWAY_PROJECT_ID }}
      SERVICE_IDS:   ${{ secrets.RAILWAY_SERVICE_IDS }}  # "svc1,svc2,svc3" 형태

    steps:
      - uses: actions/checkout@v3

      - name: 서비스 플랩(끄고→켜기)
        run: |
          HOUR=$(date +'%H')
          echo "현재 UTC 시간: $HOUR"
          for SERVICE_ID in $(echo $SERVICE_IDS | tr ',' ' '); do
            if [ "$HOUR" = "00" ]; then
              echo "▶ 서비스 시작: $SERVICE_ID"
              railway link -p $PROJECT_ID -s $SERVICE_ID 
              railway up --service $SERVICE_ID --yes
            elif [ "$HOUR" = "02" ]; then
              echo "▶ 서비스 중지: $SERVICE_ID"
              railway link -p $PROJECT_ID -s $SERVICE_ID
              railway down --yes || true
            else
              echo "스케줄 외 시간입니다: $HOUR, 작업을 수행하지 않습니다."
            fi
          done

    steps:
      - uses: actions/checkout@v3

      - name: Deploy All Services
        run: |
          # 디버깅용: 토큰이 잘 넘어오는지(안 민감한 값인 앞/뒤 4글자만)
          echo "Token head: ${RAILWAY_TOKEN:0:4}…, tail: ${RAILWAY_TOKEN: -4}"
          for SERVICE_ID in $(echo $SERVICE_IDS | tr ',' ' '); do
            echo "▶ Deploying service: $SERVICE_ID"
            # 프로젝트와 서비스 연결 (환경은 기본 production)
            railway link -p $PROJECT_ID -s $SERVICE_ID
            # 실제 업로드/배포
            railway up --service $SERVICE_ID --yes
          done