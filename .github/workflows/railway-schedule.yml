name: Railway Service Schedule
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'   # KST 09:00
    - cron: '0 10 * * *'  # KST 19:00

jobs:
  control:
    runs-on: ubuntu-latest
    env:
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
      PROJECT_ID:        ${{ secrets.RAILWAY_PROJECT_ID }}
      SERVICE_IDS:       ${{ secrets.RAILWAY_SERVICE_IDS }}  # "svc1,svc2,svc3" 형태

    steps:
      - name: Railway CLI 설치
        run: npm install -g @railway/cli

      - name: 서비스 플랩(끄고→켜기)
        run: |
          HOUR=$(date +'%H')
          echo "현재 UTC 시간: $HOUR"
          for SERVICE_ID in $(echo $SERVICE_IDS | tr ',' ' '); do
            if [ "$HOUR" = "00" ]; then
              echo "▶ 서비스 시작: $SERVICE_ID"
              railway link -p $PROJECT_ID -s $SERVICE_ID
              railway up --detach
            elif [ "$HOUR" = "10" ]; then
              echo "▶ 서비스 중지: $SERVICE_ID"
              railway link -p $PROJECT_ID -s $SERVICE_ID
              railway down --yes || true
            else
              echo "스케줄 외 시간입니다: $HOUR, 작업을 수행하지 않습니다."
            fi
          done

  test-stop:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
      PROJECT_ID:        ${{ secrets.RAILWAY_PROJECT_ID }}
      SERVICE_IDS:       ${{ secrets.RAILWAY_SERVICE_IDS }}
    steps:
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Test Stop Services
        run: |
          for SERVICE_ID in $(echo $SERVICE_IDS | tr ',' ' '); do
            echo "▶ 서비스 시작: $SERVICE_ID"
            railway link -p $PROJECT_ID -s $SERVICE_ID 
            railway redeploy --service $SERVICE_ID --yes
          done